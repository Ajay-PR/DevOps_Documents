pipeline {
	agent any
		stages {

			stage("Generic Inputs") {
				input {
					message "Select what task you want to perform ?"
					parameters {
						booleanParam(defaultValue: 'false', description: 'Create', name: 'create')
						booleanParam(defaultValue: 'false', description: 'Destroy', name: 'destroy')
						}
					}
					steps {
					script {	
						env_create = "${create}"
						env_destroy = "${destroy}"
						}
					}
				}

			stage("Prepare Inventory") {
				steps {
					script {
						if (env_create == 'true') {
						sh '''
						echo "Preparing ansible inventory file"
						sudo rm -f /etc/ansible/hosts
						sudo touch /etc/ansible/hosts
						sudo chmod 666 /etc/ansible/hosts
						'''
						}
					}
				}
			}

			stage("Terraform") {
				steps {
					script {
						if (env_create == 'true') {
						sh '''
						echo "Creating instance"
						cd /data/devops/Jenkins-workspace/Example_4/ec2_creation && /usr/local/bin/terraform apply -auto-approve && /usr/local/bin/terraform output public_ip >> /etc/ansible/hosts
						'''
						}
					}
				}
			}


			stage("Ansible") {
				steps {
					script {
						if (env_create == 'true') {
						sh '''
						echo "Executing playbook"
						sleep 120
						sudo /usr/local/bin/ansible-playbook /data/devops/Jenkins-workspace/Example_4/playbook/apache.yml --key-file "/data/devops/Jenkins-workspace/Example_4/terraform.pem"
						'''
						}
					}
				}
			}
		
			stage("Destroy") {
				steps {
					script {
						if (env_destroy == 'true') {
						sh '''
						echo "Destroy instance"
						cd /data/devops/Jenkins-workspace/Example_4/ec2_creation && /usr/local/bin/terraform destroy -auto-approve
						'''
						}
					}
				}
			}
		}
	}